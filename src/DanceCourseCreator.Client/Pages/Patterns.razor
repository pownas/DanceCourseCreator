@page "/patterns"
@* @attribute [Authorize] *@
@inject IPatternsService PatternsService
@inject IDialogService DialogService

<PageTitle>Mönster - WCS Kursskapare</PageTitle>

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    <MudGrid>
        <MudItem xs="12">
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h4">Mönster- och övningsbibliotek</MudText>
                        <MudText Typo="Typo.body1" Color="Color.Secondary">Utforska din samling av West Coast Swing-mönster och övningar</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudButton Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="Icons.Material.Filled.Add"
                                   OnClick="OpenCreateDialog">
                            Lägg till mönster
                        </MudButton>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <!-- Filters -->
                    <MudGrid Class="mb-4">
                        <MudItem xs="12" sm="3">
                            <MudSelect @bind-Value="filterType" Label="Typ" Clearable="true" OnClearButtonClick="@(async () => { filterType = null; await LoadPatterns(); })">>
                                <MudSelectItem Value="@("pattern")">Mönster</MudSelectItem>
                                <MudSelectItem Value="@("exercise")">Övning</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" sm="3">
                            <MudSelect @bind-Value="filterLevel" Label="Nivå" Clearable="true" OnClearButtonClick="@(async () => { filterLevel = null; await LoadPatterns(); })">>
                                <MudSelectItem Value="@("beginner")">Nybörjare</MudSelectItem>
                                <MudSelectItem Value="@("improver")">Förbättrare</MudSelectItem>
                                <MudSelectItem Value="@("intermediate")">Medel</MudSelectItem>
                                <MudSelectItem Value="@("advanced")">Avancerad</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        <MudItem xs="12" sm="4">
                            <MudTextField @bind-Value="searchText" 
                                          Label="Sök mönster..." 
                                          Adornment="Adornment.End" 
                                          AdornmentIcon="Icons.Material.Filled.Search"
                                          OnAdornmentClick="LoadPatterns" />
                        </MudItem>
                        <MudItem xs="12" sm="2">
                            <MudButton Variant="Variant.Outlined" 
                                       Color="Color.Primary" 
                                       OnClick="@(async () => await LoadPatterns())"
                                       FullWidth="true">
                                Filtrera
                            </MudButton>
                        </MudItem>
                    </MudGrid>

                    <!-- Results Info -->
                    @if (patterns != null)
                    {
                        <MudText Typo="Typo.body2" Color="Color.Secondary" Class="mb-4">
                            Visar @patterns.Count av totalt @patterns.Count objekt
                        </MudText>
                    }

                    <!-- Loading Indicator -->
                    @if (isLoading)
                    {
                        <MudProgressLinear Indeterminate="true" />
                    }

                    <!-- Patterns Grid -->
                    @if (patterns != null && patterns.Any())
                    {
                        <MudGrid>
                            @foreach (var pattern in patterns)
                            {
                                <MudItem xs="12" sm="6" md="4">
                                    <MudCard Class="mb-4" Style="height: 100%;">
                                        <MudCardContent>
                                            <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 12px;">
                                                <MudText Typo="Typo.h6" Style="flex: 1;">@pattern.Name</MudText>
                                                <div style="display: flex; gap: 4px; flex-wrap: wrap;">
                                                    <MudChip T="string" Size="Size.Small" Color="GetChipColor(pattern.Level)">
                                                        @pattern.Level?.ToUpperInvariant()
                                                    </MudChip>
                                                    <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined" Color="GetTypeColor(pattern.Type)">
                                                        @(pattern.Type?.ToUpperInvariant() == "PATTERN" ? "MÖNSTER" : "ÖVNING")
                                                    </MudChip>
                                                </div>
                                            </div>
                                            <MudText Typo="Typo.body2" Class="mb-3" Style="color: var(--mud-palette-text-secondary);">
                                                @(string.IsNullOrEmpty(pattern.Description) ? "Ingen beskrivning" : 
                                                  pattern.Description.Length > 120 ? pattern.Description.Substring(0, 120) + "..." : pattern.Description)
                                            </MudText>
                                            @if (pattern.EstimatedMinutes > 0)
                                            {
                                                <div style="display: flex; align-items: center; color: var(--mud-palette-text-secondary);">
                                                    <MudIcon Icon="Icons.Material.Filled.Timer" Size="Size.Small" Class="mr-1" /> 
                                                    <MudText Typo="Typo.caption">@pattern.EstimatedMinutes min</MudText>
                                                </div>
                                            }
                                        </MudCardContent>
                                        <MudCardActions>
                                            <MudButton Size="Size.Small" 
                                                       Color="Color.Primary" 
                                                       OnClick="@(() => ViewPattern(pattern))">
                                                Visa
                                            </MudButton>
                                            <MudButton Size="Size.Small" 
                                                       Color="Color.Secondary" 
                                                       OnClick="@(() => EditPattern(pattern))">
                                                Redigera
                                            </MudButton>
                                        </MudCardActions>
                                    </MudCard>
                                </MudItem>
                            }
                        </MudGrid>
                    }
                    else if (!isLoading)
                    {
                        <MudPaper Class="pa-8 text-center" Style="background-color: var(--mud-palette-grey-lighten5);">
                            <MudIcon Icon="Icons.Material.Filled.LibraryBooks" Size="Size.Large" Color="Color.Secondary" Class="mb-4" />
                            <MudText Typo="Typo.h6" Class="mb-2">Inga mönster hittades</MudText>
                            <MudText Typo="Typo.body1" Color="Color.Secondary" Class="mb-4">
                                Börja genom att lägga till ditt första mönster!
                            </MudText>
                            <MudButton Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       StartIcon="Icons.Material.Filled.Add"
                                       OnClick="OpenCreateDialog">
                                Lägg till mönster
                            </MudButton>
                        </MudPaper>
                    }
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private List<PatternOrExercise>? patterns;
    private bool isLoading = false;
    private string? filterType;
    private string? filterLevel;
    private string searchText = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadPatterns();
    }

    private async Task LoadPatterns()
    {
        isLoading = true;
        try
        {
            var searchValue = string.IsNullOrWhiteSpace(searchText) ? null : searchText;
            patterns = await PatternsService.GetPatternsAsync(filterType, filterLevel, searchValue);
        }
        catch (Exception)
        {
            // Handle error
        }
        finally
        {
            isLoading = false;
        }
    }

    private Color GetChipColor(string? level)
    {
        return level?.ToLower() switch
        {
            "beginner" => Color.Success,
            "improver" => Color.Info,
            "intermediate" => Color.Warning,
            "advanced" => Color.Error,
            _ => Color.Default
        };
    }

    private Color GetTypeColor(string? type)
    {
        return type?.ToLower() switch
        {
            "pattern" => Color.Primary,
            "exercise" => Color.Secondary,
            _ => Color.Default
        };
    }

    private async Task OpenCreateDialog()
    {
        // TODO: Create pattern dialog
        await LoadPatterns();
    }

    private void ViewPattern(PatternOrExercise pattern)
    {
        // TODO: View pattern dialog
    }

    private async Task EditPattern(PatternOrExercise pattern)
    {
        // TODO: Edit pattern dialog
        await LoadPatterns();
    }
}